{"ast":null,"code":"import { ADD_CART, REMOVE_CART } from \"../constants/ActionTypes\";\nconst initialState = {\n  products: [],\n  total: 0\n};\nexport const orderReducer = (state = initialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case ADD_CART:\n      const existingIndex = state.products.findIndex(item => item._id === payload._id);\n\n      if (existingIndex >= 0) {\n        state.products[existingIndex] = { ...state.products[existingIndex],\n          quantity: state.products[existingIndex].quantity + 1\n        };\n      } else {\n        let product = {\n          payload,\n          quantity: 1\n        };\n        state.products.push(product);\n      }\n\n    // return {...state,products:[...state.products,payload]}; \n\n    case REMOVE_CART:\n      let clone = state.products;\n      clone.splice(payload, 1);\n      return {\n        products: clone\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/PC/Desktop/DeliveryApp/client/src/redux/reducers/CartReducer.js"],"names":["ADD_CART","REMOVE_CART","initialState","products","total","orderReducer","state","type","payload","existingIndex","findIndex","item","_id","quantity","product","push","clone","splice"],"mappings":"AAAA,SAASA,QAAT,EAAkBC,WAAlB,QAAqC,0BAArC;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,EADO;AAEjBC,EAAAA,KAAK,EAAE;AAFU,CAArB;AAOE,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAEJ,YAAR,EAAsB;AAAEK,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAtB,KAA4C;AACtE,UAAQD,IAAR;AACE,SAAKP,QAAL;AACE,YAAMS,aAAa,GAAGH,KAAK,CAACH,QAAN,CAAeO,SAAf,CAA0BC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaJ,OAAO,CAACI,GAAxD,CAAtB;;AAEA,UAAGH,aAAa,IAAI,CAApB,EAAsB;AACpBH,QAAAA,KAAK,CAACH,QAAN,CAAeM,aAAf,IAA+B,EAC7B,GAAGH,KAAK,CAACH,QAAN,CAAeM,aAAf,CAD0B;AACII,UAAAA,QAAQ,EAACP,KAAK,CAACH,QAAN,CAAeM,aAAf,EAA8BI,QAA9B,GAAuC;AADpD,SAA/B;AAGD,OAJD,MAIK;AACH,YAAIC,OAAO,GAAG;AAACN,UAAAA,OAAD;AAASK,UAAAA,QAAQ,EAAE;AAAnB,SAAd;AACAP,QAAAA,KAAK,CAACH,QAAN,CAAeY,IAAf,CAAoBD,OAApB;AACD;;AAED;;AAEF,SAAKb,WAAL;AACM,UAAIe,KAAK,GAAGV,KAAK,CAACH,QAAlB;AACAa,MAAAA,KAAK,CAACC,MAAN,CAAaT,OAAb,EAAqB,CAArB;AACA,aAAO;AAACL,QAAAA,QAAQ,EAACa;AAAV,OAAP;;AAGN;AACE,aAAOV,KAAP;AAtBJ;AAwBD,CAzBM","sourcesContent":["import { ADD_CART,REMOVE_CART } from \"../constants/ActionTypes\";\r\n\r\nconst initialState = {\r\n    products: [],\r\n    total: 0,\r\n    \r\n    \r\n  };\r\n\r\n  export const orderReducer = (state =initialState, { type, payload }) => {\r\n    switch (type) {\r\n      case ADD_CART:\r\n        const existingIndex = state.products.findIndex((item) => item._id === payload._id)\r\n\r\n        if(existingIndex >= 0){\r\n          state.products[existingIndex] ={\r\n            ...state.products[existingIndex],quantity:state.products[existingIndex].quantity+1\r\n          }\r\n        }else{\r\n          let product = {payload,quantity: 1}\r\n          state.products.push(product)\r\n        }\r\n\r\n        // return {...state,products:[...state.products,payload]}; \r\n        \r\n      case REMOVE_CART:\r\n            let clone = state.products;\r\n            clone.splice(payload,1);\r\n            return {products:clone};\r\n\r\n    \r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n"]},"metadata":{},"sourceType":"module"}