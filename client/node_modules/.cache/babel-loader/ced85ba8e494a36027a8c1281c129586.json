{"ast":null,"code":"import { ADD_CART, REMOVE_CART } from \"../constants/ActionTypes\";\nconst initialState = {\n  products: [],\n  total: 0\n};\nexport const orderReducer = (state = initialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case ADD_CART:\n      const price = Number(payload.price) * Number(payload.quantity);\n      console.log(price);\n      return { ...state,\n        products: [...state.products, payload]\n      };\n\n    case REMOVE_CART:\n      let clone = state.products;\n      clone.splice(payload, 1);\n      return {\n        products: clone\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/PC/Desktop/DeliveryApp/client/src/redux/reducers/CartReducer.js"],"names":["ADD_CART","REMOVE_CART","initialState","products","total","orderReducer","state","type","payload","price","Number","quantity","console","log","clone","splice"],"mappings":"AAAA,SAASA,QAAT,EAAkBC,WAAlB,QAAqC,0BAArC;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,EADO;AAEjBC,EAAAA,KAAK,EAAC;AAFW,CAArB;AAME,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAEJ,YAAR,EAAsB;AAAEK,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAtB,KAA4C;AACtE,UAAQD,IAAR;AACE,SAAKP,QAAL;AAEE,YAAMS,KAAK,GAAGC,MAAM,CAACF,OAAO,CAACC,KAAT,CAAN,GAAsBC,MAAM,CAACF,OAAO,CAACG,QAAT,CAA1C;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AAEA,aAAO,EAAC,GAAGH,KAAJ;AAAUH,QAAAA,QAAQ,EAAC,CAAC,GAAGG,KAAK,CAACH,QAAV,EAAmBK,OAAnB;AAAnB,OAAP;;AAGF,SAAKP,WAAL;AACM,UAAIa,KAAK,GAAGR,KAAK,CAACH,QAAlB;AACAW,MAAAA,KAAK,CAACC,MAAN,CAAaP,OAAb,EAAqB,CAArB;AACA,aAAO;AAACL,QAAAA,QAAQ,EAACW;AAAV,OAAP;;AAGN;AACE,aAAOR,KAAP;AAhBJ;AAkBD,CAnBM","sourcesContent":["import { ADD_CART,REMOVE_CART } from \"../constants/ActionTypes\";\r\n\r\nconst initialState = {\r\n    products: [],\r\n    total:0   \r\n    \r\n  };\r\n\r\n  export const orderReducer = (state =initialState, { type, payload }) => {\r\n    switch (type) {\r\n      case ADD_CART:\r\n\r\n        const price = Number(payload.price)*Number(payload.quantity)\r\n        console.log(price)\r\n\r\n        return {...state,products:[...state.products,payload]}; \r\n         \r\n        \r\n      case REMOVE_CART:\r\n            let clone = state.products;\r\n            clone.splice(payload,1);\r\n            return {products:clone};\r\n\r\n    \r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n"]},"metadata":{},"sourceType":"module"}